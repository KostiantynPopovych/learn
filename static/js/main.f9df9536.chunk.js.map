{"version":3,"sources":["pages/topic/sm.module.scss","pages/login/styles.module.scss","components/organisms/header/sm.module.scss","components/atoms/puls/sm.module.scss","constants/db.ts","hooks/useToggle.ts","context/global.tsx","hooks/useFetch.ts","app/firebase/index.ts","constants/global.ts","hooks/useGetParams.ts","constants/routes.ts","context/topicsDetails.tsx","context/auth.tsx","utils/firestoreQueryBuilder.ts","context/sections.tsx","components/organisms/sideBar/sideBarTypes.ts","context/topics.tsx","app/providers.tsx","components/organisms/editor/config.ts","components/organisms/editor/useEditor.ts","components/organisms/editor/index.tsx","components/organisms/form/singleInput/config.ts","components/organisms/form/singleInput/index.tsx","hooks/useManageEntities.ts","hooks/useClickOutside.ts","components/organisms/sideBar/useSideBar.ts","components/organisms/sideBar/index.tsx","components/organisms/header/useHeader.ts","components/organisms/header/index.tsx","components/atoms/puls/index.tsx","pages/topic/useTopic.ts","pages/topic/index.tsx","pages/login/useLogin.ts","pages/login/index.tsx","components/organisms/privateRoute/index.tsx","app/index.tsx","reportWebVitals.ts","index.tsx","components/organisms/sideBar/sm.module.scss","styles/shared.module.scss"],"names":["module","exports","Db","useToggle","defaultState","useState","state","setState","handleChangeState","useCallback","prevState","useMemo","defaultDataContextState","markDown","isEditing","isLoading","defaultActionsContextState","setMarkDown","newOne","toggleIsEditing","toggleIsLoading","GlobalDataContext","createContext","GlobalActionsContext","memo","children","handleSetMarkDown","incoming","Provider","value","useFetch","useContext","Set","requestsInPending","setRequestsInPending","setIsLoading","errors","setErrors","request","promise","a","withLocalLoading","has","add","res","size","delete","ActionType","process","firebaseConfig","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","firebaseInstance","initializeApp","db","getFirestore","sectionsCollection","collection","Sections","topicsCollection","Topics","permissionsCollection","Permissions","useGetParams","path","match","useRouteMatch","params","ROUTES","topic","_","byId","auth","receiveDetails","topicId","updateDetails","update","TopicDetailsDataContext","TopicDetailsActionsContext","details","setDetails","id","d","doc","getDoc","data","updated","local","prevDetails","updatedDetails","setDoc","useEffect","content","getAuth","INPUT","DEFAULT_PERMISSIONS","write","create","user","isInitializing","sendLink","email","signIn","code","logout","AuthDataContext","AuthActionsContext","setUser","setIsInitializing","useHistory","replace","location","sendSignInLinkToEmail","url","window","href","handleCodeInApp","localStorage","setItem","getUserPermissions","input","getItem","signInWithEmailLink","result","uid","permissionsResult","permissions","removeItem","signOut","unsubscribe","onAuthStateChanged","pathname","includes","getQueryStaticParts","fieldName","type","ActionEntity","GET_FILTERED_SECTIONS_QUERY","SECTIONS_INITIAL_STATE","sections","handleManageSection","action","section","SectionsDataContext","SectionsActionsContext","setSections","q","query","where","orderBy","getDocs","sectionsDocs","normalizedSections","Array","isArray","docs","forEach","name","Delete","Add","GET_TOPICS_QUERY","GET_FILTERED_TOPICS_QUERY","TOPICS_INITIAL_STATE","topics","receiveTopics","sectionId","handleManageTopic","TopicsDataContext","TopicsActionsContext","setTopics","topicsDocs","normalizedTopics","rest","DEFAULT_VIEW","menu","md","html","mdParser","MarkdownIt","useEditor","mdEditorRef","useRef","handleMarkDownChange","text","handleRenderEditorHTML","render","current","setView","Editor","ref","renderHTML","onChange","readOnly","view","FIELDS","validationRules","required","SingleInput","onSubmit","initialValues","useForm","defaultValues","handleSubmit","control","renderInput","field","addonAfter","ArrowRightOutlined","rules","getRefs","useManageEntities","activeAction","setActiveAction","handleResetAction","handleUpdateEntity","entity","handleDeleteEntity","parentId","refs","updateData","isArchived","updateDoc","handleAddEditEntity","uuidv4","undefined","handleManageEntityClick","ev","stopPropagation","Edit","useClickOutside","callback","eventType","handlerRef","listener","event","target","shadowRoot","contains","document","addEventListener","removeEventListener","useSideBar","formWrapRef","useParams","push","canCreate","selectedKeys","formInitialValues","handleOpenSection","key","handleTopicClick","handleTopicHover","SubMenu","Menu","Sider","Layout","SideBar","renderTopic","Item","icon","className","sm","Topic","EditFilled","onClick","Topic_Edit","DeleteFilled","SettingFilled","onMouseEnter","renderSections","Section","title","onTitleMouseEnter","onTitleClick","Section_Edit","AddMenuItem","PlusCircleOutlined","sharedSm","Icon","Object","values","map","Background","Background_Content","Logo","length","mode","activeKey","useHeader","canEdit","handleSaveClick","subTitle","Header","extra","Header_Button","CheckCircleOutlined","EditOutlined","Pulse","isVisible","cn","Pulse_Visible","useTopic","Container","Container_Right","Container_Right_Editor","useLogin","search","useLocation","handleSubmitForm","Login","Container_Label","Container_Input","PrivateRoute","to","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,UAAY,sBAAsB,gBAAkB,4BAA4B,uBAAyB,qC,oBCA3HD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,gBAAkB,gCAAgC,gBAAkB,kC,oBCA5HD,EAAOC,QAAU,CAAC,cAAgB,4B,oBCAlCD,EAAOC,QAAU,CAAC,MAAQ,kBAAkB,QAAU,oBAAoB,cAAgB,4B,8GCDrFC,E,kDCeUC,EAbG,WAA4D,IAA3DC,EAA0D,wDAC3E,EAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAEMC,EAAoBC,uBAAY,WACpCF,GAAS,SAACG,GAAD,OAAgBA,OACxB,IAEH,OAAOC,mBACL,iBAAM,CAACL,EAAOE,EAAmBD,KACjC,CAACD,EAAOC,EAAUC,K,QCRhBI,EAA0B,CAC9BC,SAAU,GACVC,WAAW,EACXC,WAAW,GAGPC,EAA6B,CACjCC,YAAa,SAACC,KACdC,gBAAiB,aACjBC,gBAAiB,cAGNC,EAAoBC,wBAC/BV,GAGWW,EAAuBD,wBAElCN,GAEaQ,kBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SACrB,EAAgCpB,mBAAS,IAAzC,mBAAOQ,EAAP,KAAiBI,EAAjB,KAEA,EAAqCd,IAArC,mBAAOW,EAAP,KAAkBK,EAAlB,KAEA,EAAqChB,IAArC,mBAAOY,EAAP,KAAkBK,EAAlB,KAEMM,EAAoBjB,uBAAY,SAACkB,GACrCV,EAAYU,KACX,IAEH,OACE,cAACN,EAAkBO,SAAnB,CACEC,MAAOlB,mBACL,iBAAO,CACLE,WACAC,YACAC,eAEF,CAACF,EAAUC,EAAWC,IAP1B,SAUE,cAACQ,EAAqBK,SAAtB,CACEC,MAAOlB,mBACL,iBAAO,CACLM,YAAaS,EACbP,kBACAC,qBAEF,CAACM,EAAmBP,EAAiBC,IAPzC,SAUGK,S,sCCFMK,EAlDE,WACf,IAAQV,EAAoBW,qBAAWR,GAA/BH,gBAER,EAAkDf,mBAAS,IAAI2B,KAA/D,mBAAOC,EAAP,KAA0BC,EAA1B,KAEA,EAAkC7B,oBAAS,GAA3C,mBAAOU,EAAP,KAAkBoB,EAAlB,KAEA,EAA4B9B,mBAAuB,MAAnD,mBAAO+B,EAAP,KAAeC,EAAf,KAEMC,EAAU7B,sBAAW,uCACzB,WAAW8B,GAAX,6BAAAC,EAAA,yDAAiCC,EAAjC,iCACMR,EAAkBS,IAAIH,GAD5B,wDAGEJ,GAAa,GAERM,IACHrB,IACAc,EAAqBD,EAAkBU,IAAIJ,KAP/C,kBAagBA,EAbhB,OAaIK,EAbJ,yDAeIA,EAAG,KACHP,EAAU,CAAC,EAAD,KAhBd,0BAkBSI,GAAsBR,EAAkBY,MAC3CzB,IAEFa,EAAkBa,OAAOP,GACzBJ,GAAa,GAtBjB,8CAyBSS,GAzBT,gEADyB,sDA4BzB,CAACxB,EAAiBa,IAGpB,OAAOtB,mBACL,iBAAO,CACLI,YACAqB,SACAE,aAEF,CAACvB,EAAWqB,EAAQE,K,2BHjDnBpC,K,oBAAAA,E,gBAAAA,E,2BAAAA,M,KIIL,ICJK6C,EDIL,EAOIC,ybAEEC,EAAiB,CACrBC,OAVF,EACEC,kBAUAC,WAXF,EAEEC,sBAUAC,UAZF,EAGEC,qBAUAC,cAbF,EAIEC,yBAUAC,kBAdF,EAKEC,8BAUAC,MAfF,EAMEC,kBAYIC,EAAmBC,YAAcd,GAEjCe,EAAKC,cAGLC,EAAqBC,YAAWH,EAAI9D,EAAGkE,UAEvCC,EAAmBF,YAAWH,EAAI9D,EAAGoE,QAErCC,EAAwBJ,YAAWH,EAAI9D,EAAGsE,a,QEtBjCC,EANM,SAAIC,GACvB,IAAMC,EAAQC,YAAcF,GAE5B,OAAO/D,mBAAQ,yBAAMgE,QAAN,IAAMA,OAAN,EAAMA,EAAOE,SAAyB,QAACF,QAAD,IAACA,OAAD,EAACA,EAAOE,UCIhDC,EAVA,CACbC,MAAO,CACLC,EAAG,SACHC,KAAM,oBAERC,KAAM,CACJF,EAAG,UCgBDpE,EAA0B,GAE1BI,EAA6B,CACjCmE,eAAgB,SAACC,KACjBC,cAAe,SAACC,MAGLC,EAA0BjE,wBACrCV,GAGW4E,EAA6BlE,wBAExCN,GAEaQ,kBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SACfoD,EAASJ,EAAiCK,EAAOC,MAAME,MAErDhE,EAAgBc,qBAAWR,GAA3BN,YAER,EAA8BZ,mBAC5BO,GADF,mBAAO6E,EAAP,KAAgBC,EAAhB,KAIQpD,EAAYR,IAAZQ,QAEF6C,EAAiB1E,sBAAW,uCAChC,WAAOkF,GAAP,iBAAAnD,EAAA,0DACMiD,EAAQE,GADd,yCAC0BF,EAAQE,IADlC,cAGQC,EAAIC,YAAIxB,EAAkBsB,GAHlC,SAKoBrD,EAAwCwD,YAAOF,IALnE,cAKQhD,EALR,SAQI8C,GAAW,SAAChF,GAAD,mBAAC,eACPA,GADM,kBAERiF,EAFQ,YAAC,eAGJ/C,EAAImD,QAHD,IAIPJ,YAZR,kBAiBS/C,GAjBT,2CADgC,sDAoBhC,CAAC6C,EAASnD,IAGN+C,EAAgB5E,sBAAW,uCAC/B,WAAOuF,GAAP,mCAAAxD,EAAA,yDAA8ByD,EAA9B,gCACQC,EAAcT,EAAO,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAQO,SAE9Be,EAHR,2BAIOD,GACAF,GAGAC,EARP,uBASUL,EAAIC,YAAIxB,EAAkB2B,EAAQL,IAElCQ,EAXV,2BAYSD,GACAF,GAbT,SAgBU1D,EAAQ8D,YAAOR,EAAGO,IAhB5B,OAmBET,GAAW,SAAChF,GAAD,mBAAC,eACPA,GADM,yBAERmE,QAFQ,IAERA,OAFQ,EAERA,EAAQO,QAAoBe,OArBjC,2CAD+B,sDAyB/B,CAAC7D,EAASmD,EAAV,OAAmBZ,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAQO,UAiB7B,OAdAiB,qBAAU,WACR,sBAAC,sBAAA7D,EAAA,2DACW,OAANqC,QAAM,IAANA,OAAA,EAAAA,EAAQO,UAAYK,EAAQZ,EAAOO,SADxC,gCAESD,EAAeN,EAAOO,SAF/B,0CAAD,KAKC,QAACP,QAAD,IAACA,OAAD,EAACA,EAAQO,QAASD,EAAgBM,IAErCY,qBAAU,YACE,OAANxB,QAAM,IAANA,OAAA,EAAAA,EAAQO,UAAWK,EAAQZ,EAAOO,UACpCnE,EAAYwE,EAAQZ,EAAOO,SAASkB,WAErC,CAACrF,EAAawE,EAAd,OAAuBZ,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAQO,UAGhC,cAACG,EAAwB3D,SAAzB,CACEC,MAAOlB,mBACL,kBAAM8E,GAAc,OAANZ,QAAM,IAANA,OAAA,EAAAA,EAAQO,UAAW,MACjC,CAACK,EAAD,OAAUZ,QAAV,IAAUA,OAAV,EAAUA,EAAQO,UAHtB,SAME,cAACI,EAA2B5D,SAA5B,CACEC,MAAOlB,mBACL,iBAAO,CACLwE,iBACAE,mBAEF,CAACF,EAAgBE,IANrB,SASG5D,S,QCrGHyD,EAAOqB,YAAQzC,GAEf0C,EAAQ,QAERC,EAAuC,CAC3CC,OAAO,EACPC,QAAQ,GAGJ/F,EAA0B,CAC9BgG,KAAM,KACNC,gBAAgB,GAGZ7F,EAA6B,CACjC8F,SAAU,SAACC,KACXC,OAAQ,SAACC,KACTC,OAAQ,cAGGC,EAAkB7F,wBAC7BV,GAGWwG,EAAqB9F,wBAEhCN,GAEaQ,kBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SACrB,EAAwBpB,mBAAwC,MAAhE,mBAAOuG,EAAP,KAAaS,EAAb,KAEQjG,EAAoBW,qBAAWR,GAA/BH,gBAEAkB,EAAYR,IAAZQ,QAER,EAA4CjC,oBAAS,GAArD,mBAAOwG,EAAP,KAAuBS,EAAvB,KAEA,EAA8BC,cAAtBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAEXX,EAAWrG,sBAAW,uCAC1B,WAAOsG,GAAP,SAAAvE,EAAA,6DACEpB,IADF,SAEQsG,YAAsBxC,EAAM6B,EAAO,CACvCY,IAAKC,OAAOH,SAASI,KACrBC,iBAAiB,IAJrB,OAOEC,aAAaC,QAAQxB,EAAOO,GAC5B3F,IARF,2CAD0B,sDAW1B,CAACA,IAGG6G,EAAqBxH,sBAAW,uCACpC,WAAOkF,GAAP,eAAAnD,EAAA,6DACQoD,EAAIC,YAAItB,EAAuBoB,GADvC,SAEerD,EAAwCwD,YAAOF,IAF9D,mFADoC,sDAKpC,CAACtD,IAGG0E,EAASvG,sBAAW,uCACxB,WAAOwG,GAAP,mBAAAzE,EAAA,6DACEpB,IAEM8G,EAAQH,aAAaI,QAAQ3B,GAHrC,SAKuB4B,YAAoBlD,EAAMgD,EAAiBjB,GALlE,cAKQoB,EALR,gBAOkCJ,EAAmBI,EAAOzB,KAAK0B,KAPjE,OAOQC,EAPR,OASElB,EAAQ,2BACHgB,EAAOzB,MADL,IAEL4B,aACE,OAACD,QAAD,IAACA,OAAD,EAACA,EAAmBxC,SAA8BU,KAGtDsB,aAAaU,WAAWjC,GACxBpF,IACAoG,EAAQ1C,EAAOC,MAAMC,GAjBvB,4CADwB,sDAoBxB,CAACwC,EAASpG,EAAiB6G,IAGvBf,EAASzG,sBAAW,sBAAC,sBAAA+B,EAAA,6DACzBpB,IADyB,SAEnBsH,YAAQxD,GAFW,OAGzBmC,EAAQ,MACRjG,IAJyB,2CAKxB,CAACA,IA2BJ,OAzBAiF,qBAAU,WACR,IAAMsC,EAAczD,EAAK0D,mBAAL,+BAAApG,EAAA,MAAwB,WAAOoE,GAAP,iBAAApE,EAAA,0DAGtCoE,EAHsC,gCAIdqB,EAAmBrB,EAAK0B,KAJV,OAIxCC,EAJwC,OAMxClB,EAAQ,2BACHT,GADE,IAEL4B,aACE,UAACD,SAAD,aAAC,EAAmBxC,SACpBU,KAVoC,OAc1Ca,GAAkB,GAEdV,GAAQa,EAASoB,SAASC,SAAShE,EAAOI,KAAKF,IACjDwC,EAAQ1C,EAAOC,MAAMC,GAjBmB,2CAAxB,uDAqBpB,OAAO,kBAAM2D,OACZ,CAAClB,EAAUD,EAASS,IAGrB,cAACd,EAAgBvF,SAAjB,CACEC,MAAOlB,mBACL,iBAAO,CACLiG,OACAC,oBAEF,CAACD,EAAMC,IANX,SASE,cAACO,EAAmBxF,SAApB,CACEC,MAAOlB,mBACL,iBAAO,CACLmG,WACAE,SACAE,YAEF,CAACJ,EAAUE,EAAQE,IAPvB,SAUGzF,S,iBC7JMsH,EALa,SAACC,EAAmBC,GAApB,MAAsC,CAChED,YACAC,KAAMA,K,SLJHlG,K,gBAAAA,E,YAAAA,E,WAAAA,M,KMqBL,IClBYmG,IDkBNC,GAA8BJ,EAAoB,aAAc,MAEhEK,GAAyB,GAEzBxI,GAA0B,CAC9ByI,SAAU,IAGNrI,GAA6B,CACjCsI,oBAAqB,SAACC,EAAoBC,MAG/BC,GAAsBnI,wBAEjCV,IAEW8I,GAAyBpI,wBAEpCN,IAEaQ,mBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SACba,EAAYR,IAAZQ,QAER,EAAgCjC,mBAC9B+I,IADF,mBAAOC,EAAP,KAAiBM,EAAjB,KAIAtD,qBAAU,WACR,sBAAC,gCAAA7D,EAAA,6DACOoH,EAAIC,YACR3F,EACA4F,YACEX,GAA4BH,UAC5BG,GAA4BF,MAC5B,GAEFc,YAAQZ,GAA4BH,WACpCe,YAAQ,SATX,SAY4BzH,EACzB0H,YAAQJ,IAbX,OAYOK,EAZP,OAgBKC,EAAwC,GAExCD,GAAgBE,MAAMC,QAAN,OAAcH,QAAd,IAAcA,OAAd,EAAcA,EAAcI,OAC9CJ,EAAaI,KAAKC,SAAQ,SAACzE,GACzB,IAAQ0E,EAAS1E,EAAIE,OAAbwE,KACRL,EAAkB,2BACbA,GADa,kBAEfrE,EAAIF,GAAK,CACRA,GAAIE,EAAIF,GACR4E,aAMRZ,EAAYO,GA/Bb,0CAAD,KAiCC,CAAC5H,IAEJ,IAAMgH,EAAsB7I,uBAAY,SAACwI,EAAkBO,GACzDG,GAAY,SAACjJ,GACX,GAAIuI,IAASlG,EAAWyH,OAAQ,CAC9B,MAAShB,EAAQ7D,GAA0BjF,EAA3C,GACA,OADA,YAA2CA,EAA3C,cAIF,OAAO,2BACFA,GADL,kBAEG8I,EAAQ7D,GACPsD,IAASlG,EAAW0H,IAChBjB,EADJ,2BAGS9I,EAAU8I,EAAQ7D,KAClB6D,UAId,IAEH,OACE,cAACC,GAAoB7H,SAArB,CACEC,MAAOlB,mBACL,iBAAO,CACL0I,cAEF,CAACA,IALL,SAQE,cAACK,GAAuB9H,SAAxB,CACEC,MAAOlB,mBACL,iBAAO,CACL2I,yBAEF,CAACA,IALL,SAQG7H,SE3GHiJ,GAAmB3B,EAAoB,YAAa,MAEpD4B,GAA4B5B,EAAoB,aAAc,MAE9D6B,GAAuB,GAEvBhK,GAA0B,CAC9BiK,OAAQ,IAGJ7J,GAA6B,CACjC8J,cAAe,SAACC,KAChBC,kBAAmB,SAACzB,EAAoBxE,MAG7BkG,GAAoB3J,wBAC/BV,IAGWsK,GAAuB5J,wBAElCN,IAEaQ,mBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SACba,EAAYR,IAAZQ,QAER,EACEjC,mBAAoCuK,IADtC,mBAAOC,EAAP,KAAeM,EAAf,KAGML,EAAgBrK,sBAAW,uCAC/B,WAAOsK,GAAP,mBAAAvI,EAAA,0DACMqI,EAAOE,GADb,yCACgCF,EAAOE,IADvC,cAGQnB,EAAIC,YACRxF,EACAyF,YACEa,GAA0B3B,UAC1B2B,GAA0B1B,MAC1B,GAEFc,YAAQY,GAA0B3B,WAClCc,YAAMY,GAAiB1B,UAAW0B,GAAiBzB,KAAM8B,GACzDhB,YAAQ,SAZZ,SAe2BzH,EAAqC0H,YAAQJ,IAfxE,cAeQwB,EAfR,OAiBMC,EAAoC,GAEpCD,GACFA,EAAWd,SAAQ,SAACzE,GAClB,IAAQ0E,EAAS1E,EAAIE,OAAbwE,KACRc,EAAgB,2BACXA,GADW,kBAEbxF,EAAIF,GAAK,CACRA,GAAIE,EAAIF,GACR4E,OACAQ,kBAMRI,GAAU,SAACzK,GAAD,mBAAC,eACNA,GADK,kBAEPqK,EAAYM,OAnCjB,kBAsCSA,GAtCT,4CAD+B,sDAyC/B,CAACR,EAAQvI,IAGL0I,EAAoBvK,uBAAY,SAACwI,EAAkBlE,GACvDoG,GAAU,SAACzK,GACT,GAAIuI,IAASlG,EAAWyH,OAAQ,CAC9B,MAAyC9J,EAAUqE,EAAMgG,WAAzD,EAAShG,EAAMY,GAAiB2F,GAAhC,kCAEA,OAAO,2BACF5K,GADL,kBAEGqE,EAAMgG,UAFT,eAGOO,KAKT,OAAO,2BACF5K,GADL,kBAEGqE,EAAMgG,UAFT,2BAGOrK,EAAUqE,EAAMgG,YAHvB,kBAIKhG,EAAMY,GACLsD,IAASlG,EAAW0H,IAChB1F,EADJ,2BAGSrE,EAAUqE,EAAMY,KAChBZ,YAKhB,IAEH,OACE,cAACkG,GAAkBrJ,SAAnB,CACEC,MAAOlB,mBACL,iBAAO,CACLkK,YAEF,CAACA,IALL,SAQE,cAACK,GAAqBtJ,SAAtB,CACEC,MAAOlB,mBACL,iBAAO,CACLmK,gBACAE,uBAEF,CAACF,EAAeE,IANpB,SASGvJ,SC/HMD,mBAAK,gBAAGC,EAAH,EAAGA,SAAH,OAClB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UAAgBA,e,UCZpB8J,I,OAAe,CACnBC,MAAM,EACNC,IAAI,EACJC,MAAM,I,UCEFC,GAAW,I,QAAIC,GAgDNC,GA9CG,WAChB,MAAgC9J,qBAAWV,GAAnCP,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEXI,EAAgBc,qBAAWR,GAA3BN,YAEF6K,EAAcC,iBAAwB,MAEtCC,EAAuBvL,uBAC3B,YAAe,IAAZwL,EAAW,EAAXA,KACDhL,EAAYgL,KAEd,CAAChL,IAGGiL,EAAyBzL,uBAAY,SAACwL,GAC1C,OAAON,GAASQ,OAAOF,KACtB,IAYH,OAVA5F,qBAAU,WACJyF,EAAYM,SACdN,EAAYM,QAAQC,QAAQ,CAC1Bb,KAAM1K,EACN2K,GAAI3K,EACJ4K,MAAM,MAGT,CAAC5K,IAEGH,mBACL,iBAAO,CACLmL,cACAI,yBACAF,uBACAnL,WACAC,eAEF,CACEgL,EACAE,EACAE,EACArL,EACAC,KCxCAwL,I,OAAS,WACb,MAMIT,KALFC,EADF,EACEA,YACAI,EAFF,EAEEA,uBACAF,EAHF,EAGEA,qBACAnL,EAJF,EAIEA,SACAC,EALF,EAKEA,UAGF,OACE,cAAC,KAAD,CACEyL,IAAKT,EACLU,WAAYN,EACZrK,MAAOhB,EACP4L,SAAUT,EACVU,UAAW5L,EACX6L,KAAMpB,OAKG/J,kBAAK8K,I,wHC7BdM,GAAS,CACbpG,MAAO,CACL+D,KAAM,QACNsC,gBAAiB,CACfC,UAAU,KCIVC,I,OAAc,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,cAC/B,EAAkCC,aAAQ,CAAEC,cAAeF,IAAnDG,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,QAEhBC,EAAc7M,uBAClB,gBAAG8M,EAAH,EAAGA,MAAH,OACE,cAAC,KAAD,2BACMA,GADN,IAEEC,WACE,wBAAQvE,KAAK,SAAb,SACE,cAACwE,GAAA,EAAD,WAKR,IAGF,OACE,sBAAMT,SAAUI,EAAaJ,GAA7B,SACE,cAAC,KAAD,CACEK,QAASA,EACTK,MAAOd,GAAOpG,MAAMqG,gBACpBtC,KAAMqC,GAAOpG,MAAM+D,KACnB4B,OAAQmB,QAMD9L,kBAAKuL,I,qBPlCR7D,Q,KAAAA,E,OACDhJ,EAAGoE,Q,SADF4E,I,SAEChJ,EAAGkE,U,yCQaVuJ,GAAU,SAAChI,GAAD,gCACbuD,EAAa5E,OAASuB,YAAIxB,EAAkBsB,IAD/B,cAEbuD,EAAa9E,SAAWyB,YAAI3B,EAAoByB,IAFnC,GAuHDiI,GAlHW,WACxB,MACEvN,mBAAwC,MAD1C,mBAAOwN,EAAP,KAAqBC,EAArB,KAGQxE,EAAwBvH,qBAAW2H,IAAnCJ,oBAEA0B,EAAsBjJ,qBAAWmJ,IAAjCF,kBAEF+C,EAAoBtN,uBAAY,WACpCqN,EAAgB,QACf,IAEGE,EAAqBvN,uBACzB,SAACwN,EAAsBhF,EAAkBlD,GAAU,IAAD,GACvC,mBACNmD,EAAa9E,SAAWkF,GADlB,cAENJ,EAAa5E,OAAS0G,GAFhB,GAKLiD,GAAQhF,EAAMlD,KAEpB,CAACiF,EAAmB1B,IAGhB4E,EAAqBzN,sBAAW,uCACpC,qCAAA+B,EAAA,6DAAmBuI,EAAnB,EAASoD,SAAwBtJ,EAAjC,kBACQuJ,EAAOT,GAAQ9I,EAAOc,IAEtB4G,EAAM6B,EAAKvJ,EAAOoJ,QAElBI,EAAa,CAAEC,YAAY,GALnC,SAOQC,YAAUhC,EAAK8B,GAPvB,OASEL,EAAmBnJ,EAAOoJ,OAAQlL,EAAWyH,OAA3B,YAAC,2BACd3F,GACAwJ,GAFa,IAGhBtD,eAGFgD,IAfF,2CADoC,sDAkBpC,CAACA,EAAmBC,IAGhBQ,EAAsB/N,sBAAW,uCACrC,yCAAA+B,EAAA,yDAAgB+H,EAAhB,EAASrC,MACDvC,GAAiB,OAAZkI,QAAY,IAAZA,OAAA,EAAAA,EAAclI,KAAM8I,eAEzBnI,GAAsB,OAAZuH,QAAY,IAAZA,OAAA,EAAAA,EAAclI,SAAK+I,EAAY,GAEzC3D,EALR,OAKoB8C,QALpB,IAKoBA,OALpB,EAKoBA,EAAcM,SAE1BC,EAAOT,GAAQhI,GAEf4G,EAAM6B,EAAMP,EAAqCI,QAEjDlI,EAXR,yBAYIwE,OACA+D,YAAY,GACRvD,EAAY,CAAEA,aAAc,KAChB,OAAZ8C,QAAY,IAAZA,OAAA,EAAAA,EAAcI,UAAW/E,EAAa5E,SAAU,OAACuJ,QAAD,IAACA,OAAD,EAACA,EAAclI,IAE/D,GADA,CAAEW,cAhBV,OAoBMuH,QApBN,IAoBMA,OApBN,EAoBMA,EAAclI,IApBpB,kCAqBU4I,YAAUhC,EAAKxG,GArBzB,iDAuBUK,YAAOmG,EAAKxG,GAvBtB,QA0BEiI,EAAkB,OAChBH,QADgB,IAChBA,OADgB,EAChBA,EAAcI,OADE,OAEhBJ,QAFgB,IAEhBA,OAFgB,EAEhBA,EAAc5E,KAFE,YAAC,eAGZlD,GAHW,IAGLJ,QAGboI,IAhCF,4CADqC,sDAmCrC,CAACF,EAAcE,EAAmBC,IAG9BW,EAA0BlO,uBAC9B,SAACoE,GAAD,OAAiC,SAAC+J,GAAwB,IAAD,EACvDA,EAAGC,mBAEM,mBACN9L,EAAW0H,IAAMqD,GADX,cAEN/K,EAAW+L,KAAOhB,GAFZ,cAGN/K,EAAWyH,OAAS0D,GAHd,GAMLrJ,EAAOoE,MAAMpE,MAEnB,CAACqJ,IAGH,OAAOvN,mBACL,iBAAO,CACLgO,0BACAd,eACAW,sBACAT,uBAEF,CACEY,EACAd,EACAW,EACAT,KCtFSgB,GAxCS,SACtBxC,EACAyC,GAEI,IADJC,EACG,uDADS,QAGNC,EAAanD,iBAAOiD,GAI1B3I,qBAAU,WACR6I,EAAW9C,QAAU4C,KAGvB3I,qBAAU,WACR,IAAM8I,EAAW,SAACC,GACZ7C,GAAOA,EAAIH,UACTgD,EAAMC,OAAOC,WACVF,EAAMC,OAAOC,WAAWC,SAAShD,EAAIH,UACxC8C,EAAW9C,QAAQgD,GAEX7C,EAAIH,QAAQmD,SAASH,EAAMC,SACrCH,EAAW9C,QAAQgD,KASzB,OAJAI,SAASC,iBAAiBR,EAAWE,GAErCK,SAASC,iBAAiB,aAAcN,GAEjC,WACLK,SAASE,oBAAoBT,EAAWE,GAExCK,SAASE,oBAAoB,aAAcP,QC0ElCQ,GArGI,WACjB,MAKI/B,KAJFC,EADF,EACEA,aACAc,EAFF,EAEEA,wBACAH,EAHF,EAGEA,oBACAT,EAJF,EAIEA,kBAGI6B,EAAc7D,iBAAiC,MAE7C3G,EAAYyK,cAAZzK,QAEFK,EAAU1D,qBAAWwD,GAEnBqB,EAAS7E,qBAAWoF,GAApBP,KAEAyC,EAAatH,qBAAW0H,IAAxBJ,SAEAyG,EAASvI,cAATuI,KAEFC,EAAYpP,mBAAQ,yBAAMiG,QAAN,IAAMA,OAAN,EAAMA,EAAM4B,YAAY9B,QAAO,CAACE,IAElDzB,EAAmBpD,qBAAWyD,GAA9BL,eAEA0F,EAAW9I,qBAAWkJ,IAAtBJ,OAEAC,EAAkB/I,qBAAWmJ,IAA7BJ,cAEFkF,EAAerP,mBAAQ,iBAAM,QAAC8E,QAAD,IAACA,OAAD,EAACA,EAASE,MAAK,QAACF,QAAD,IAACA,OAAD,EAACA,EAASE,KAEtDsK,EAAoBtP,mBACxB,kBACc,OAAZkN,QAAY,IAAZA,OAAA,EAAAA,EAAcvH,SACV,CACE4B,MAAO2F,EAAavH,cAEtBoI,IACN,CAACb,IAGGqC,EAAoBzP,sBAAW,uCACnC,6BAAA+B,EAAA,6DAAS2N,EAAT,EAASA,IAAT,SACQrF,EAAcqF,GADtB,2CADmC,sDAInC,CAACrF,IAGGsF,EAAmB3P,uBACvB,YAAc,IAAX0P,EAAU,EAAVA,IACGA,IAAQ/K,GACV0K,EAAKhL,EAAOC,MAAME,KAAKuC,QAAQ,WAAY2I,MAG/C,CAACL,EAAM1K,IAGHiL,EAAmB5P,uBACvB,YAAc,IAAX0P,EAAU,EAAVA,IACDhL,EAAegL,KAEjB,CAAChL,IAKH,OAFA4J,GAAgBa,EAAa/B,EAAeE,EAAoB,cAEzDpN,mBACL,iBAAO,CACLyP,mBACAvF,SACAxB,WACA6G,oBACAG,mBACA5K,UACAuK,eACAD,YACApB,0BACAd,eACAW,sBACAyB,oBACAL,cACA7B,uBAEF,CACEqC,EACAvF,EACAxB,EACA6G,EACAG,EACA5K,EACAuK,EACAD,EACApB,EACAd,EACAW,EACAyB,EACAL,EACA7B,KC7FEuC,GAAYC,KAAZD,QACAE,GAAUC,KAAVD,MAEFE,GAAU,WACd,MAcIf,KAbFhB,EADF,EACEA,wBACAd,EAFF,EAEEA,aACAhD,EAHF,EAGEA,OACAxB,EAJF,EAIEA,SACA+G,EALF,EAKEA,iBACAF,EANF,EAMEA,kBACAG,EAPF,EAOEA,iBACA5K,EARF,EAQEA,QACAuK,EATF,EASEA,aACAD,EAVF,EAUEA,UACAvB,EAXF,EAWEA,oBACAyB,EAZF,EAYEA,kBACAL,EAbF,EAaEA,YAGIe,EAAclQ,uBAClB,SAACsE,GAAD,OACE,cAAC,KAAK6L,KAAN,CACEC,KACE,cAAC,KAAD,CAEEC,UAAWC,KAAGC,MACd1K,QACE,qCACE,cAAC2K,GAAA,EAAD,CACEC,QAASvC,EAAwB,CAC/BhJ,GAAIZ,EAAMY,GACVW,QAASvB,EAAMwF,KACftB,KAAMlG,EAAW+L,KACjBb,OAAQ/E,EAAa5E,OACrB6J,SAAUpJ,EAAMgG,YAElB+F,UAAWC,KAAGI,aAEhB,cAACC,GAAA,EAAD,CACEF,QAASvC,EAAwB,CAC/BhJ,GAAIZ,EAAMY,GACVsD,KAAMlG,EAAWyH,OACjByD,OAAQ/E,EAAa5E,OACrB6J,SAAUpJ,EAAMgG,iBApB1B,SA0BE,cAACsG,GAAA,EAAD,KAzBKtM,EAAMY,IA4Bf2L,aAAcjB,EACda,QAASd,EAhCX,SAmCGrL,EAAMwF,MAFFxF,EAAMY,MAKf,CAACyK,EAAkBC,EAAkB1B,IAGjC4C,EAAiB9Q,uBACrB,SAAC+I,GAAD,OACE,eAAC8G,GAAD,CACEQ,UAAWC,KAAGS,QAEdC,MAAOjI,EAAQe,KACfmH,kBAAmBxB,EACnByB,aAAczB,EACdW,KACE,cAAC,KAAD,CAEEC,UAAWC,KAAGS,QACdlL,QACE,qCACE,cAAC2K,GAAA,EAAD,CACEC,QAASvC,EAAwB,CAC/BhJ,GAAI6D,EAAQ7D,GACZW,QAASkD,EAAQe,KACjBtB,KAAMlG,EAAW+L,KACjBb,OAAQ/E,EAAa9E,WAEvB0M,UAAWC,KAAGa,eAEhB,cAACR,GAAA,EAAD,CACEF,QAASvC,EAAwB,CAC/BhJ,GAAI6D,EAAQ7D,GACZsD,KAAMlG,EAAWyH,OACjByD,OAAQ/E,EAAa9E,gBAlB/B,SAwBE,cAACiN,GAAA,EAAD,KAvBK7H,EAAQ7D,IARnB,UAmCGoK,GACC,wBAEEmB,QAASvC,EAAwB,CAC/B1F,KAAMlG,EAAW0H,IACjB0D,SAAU3E,EAAQ7D,GAClBsI,OAAQ/E,EAAa5E,SAEvBwM,UAAWC,KAAGc,YAPhB,SASE,cAACC,GAAA,EAAD,CAAoBhB,UAAWiB,KAASC,QAT1C,gBACgBxI,EAAQ7D,KAWzBsM,OAAOC,OAAOrH,EAAOrB,EAAQ7D,KAAO,IAAIwM,IAAIxB,KA9CxCnH,EAAQ7D,MAiDjB,CACEuK,EACArF,EACA8F,EACAZ,EACApB,IAIJ,OACE,qCACGd,GACC,qBAAKiD,UAAWC,KAAGqB,WAAnB,SACE,qBAAK7F,IAAKqD,EAAakB,UAAWC,KAAGsB,mBAArC,SACE,cAAC,GAAD,CACErF,SAAUwB,EACVvB,cAAegD,QAMvB,eAACO,GAAD,WACE,qBAAKM,UAAWC,KAAGuB,KAAnB,SACE,6CAGCL,OAAOC,OAAO7I,GAAUkJ,QACzB,eAAC,KAAD,CACEC,KAAK,SACLxC,aAAcA,EACdyC,UAAS,OAAEhN,QAAF,IAAEA,OAAF,EAAEA,EAASsF,UAHtB,UAKGgF,GACC,wBAEEmB,QAASvC,EAAwB,CAC/B1F,KAAMlG,EAAW0H,IACjBwD,OAAQ/E,EAAa9E,WAEvB0M,UAAWC,KAAGc,YANhB,SAQE,cAACC,GAAA,EAAD,CAAoBhB,UAAWiB,KAASC,QAPpC,iBAWPC,OAAOC,OAAO7I,GAAU8I,IAAIZ,aAQ1B/P,kBAAKkP,I,mDC3ILgC,GAtCG,WAChB,IAAQvR,EAAoBY,qBAAWR,GAA/BJ,gBAER,EAAgCY,qBAAWV,GAAnCP,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEX+F,EAAS7E,qBAAWoF,GAApBP,KAEF+L,EAAUhS,mBAAQ,yBAAMiG,QAAN,IAAMA,OAAN,EAAMA,EAAM4B,YAAY9B,QAAO,CAACE,IAElDnB,EAAU1D,qBAAWwD,GAEnBF,EAAkBtD,qBAAWyD,GAA7BH,cAEAgE,EAAatH,qBAAW0H,IAAxBJ,SAEFuJ,EAAkBnS,uBAAY,WAC9BgF,EAAQa,UAAYzF,GACtBwE,EAAc,2BACTI,GADQ,IAEXa,QAASzF,KAGbM,MACC,CAACkE,EAAeI,EAAS5E,EAAUM,IAEtC,OAAOR,mBACL,uBAAO,CACLG,YACAK,kBACA0R,SAAQ,OAAEpN,QAAF,IAAEA,OAAF,EAAEA,EAAS8E,KACnBkH,MAAK,UAAEpI,GAAgB,OAAP5D,QAAO,IAAPA,OAAA,EAAAA,EAASsF,YAAa,WAAjC,aAAE,EAAoCR,KAC3CqI,kBACAD,aAEF,CAACA,EAAStJ,EAAU5D,EAAS3E,EAAWK,EAAiByR,KCnCvDE,GAAS,WACb,MAOIJ,KANF5R,EADF,EACEA,UACAK,EAFF,EAEEA,gBACA0R,EAHF,EAGEA,SACApB,EAJF,EAIEA,MACAmB,EALF,EAKEA,gBACAD,EANF,EAMEA,QAGF,OACE,cAAC,KAAD,CACE7B,UAAWC,KAAG+B,OACdrB,MAAOA,EACPoB,SAAUA,EACVE,MACEJ,GAAWE,EACT,wBACE/B,UAAWC,KAAGiC,cACd9B,QAASpQ,EAAY8R,EAAkBzR,EAFzC,SAIGL,EACC,cAACmS,GAAA,EAAD,CAAqBnC,UAAWiB,KAASC,OAEzC,cAACkB,GAAA,EAAD,CAAcpC,UAAWiB,KAASC,cAGpCtD,KAMGlN,kBAAKsR,I,yCCjCdK,GAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACZ,qBACEtC,UAAWuC,KACTtC,KAAGoC,MACHxS,mBACE,iCACGoQ,KAAGuC,cAAgBF,KAEtB,CAACA,QAMM5R,kBAAK2R,I,qBCRLI,GAXE,WACf,IAAQxS,EAAcgB,qBAAWV,GAAzBN,UAER,OAAOJ,mBACL,iBAAO,CACLI,eAEF,CAACA,KCDCiQ,GAAQ,WACZ,IAAQjQ,EAAcwS,KAAdxS,UAER,OACE,sBAAK+P,UAAWC,KAAGyC,UAAnB,UACE,cAAC,GAAD,CAAOJ,UAAWrS,IAClB,cAAC,GAAD,IACA,sBAAK+P,UAAWC,KAAG0C,gBAAnB,UACE,cAAC,GAAD,IACA,qBAAK3C,UAAWC,KAAG2C,uBAAnB,SACE,cAAC,GAAD,aAOKlS,kBAAKwP,ICUL2C,GA/BE,WACf,IAAQC,EAAWC,cAAXD,OAER,EAA6B7R,qBAAWqF,GAAhCN,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,OAEVjG,EAAcgB,qBAAWV,GAAzBN,UAER,EAAiCgB,qBAAWoF,GAApCP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,eAERiN,EAAmBrT,uBACvB,YAAgB,IAAbyH,EAAY,EAAZA,MACDpB,EAASoB,KAEX,CAACpB,IASH,OANAT,qBAAU,YACJuN,GAAWhN,GAASC,GACtBG,EAAOY,OAAOH,SAASI,QAExB,CAACjB,EAAMI,EAAQ4M,EAAQ/M,IAEnBlG,mBACL,iBAAO,CACLmT,mBACA/S,eAEF,CAAC+S,EAAkB/S,K,qBC1BjBgT,GAAQ,WACZ,MAAwCJ,KAAhCG,EAAR,EAAQA,iBAAkB/S,EAA1B,EAA0BA,UAE1B,OACE,sBAAK+P,UAAWC,KAAGyC,UAAnB,UACE,cAAC,GAAD,CAAOJ,UAAWrS,IAClB,qBAAK+P,UAAWC,KAAGiD,gBAAnB,SACE,2CAEF,qBAAKlD,UAAWC,KAAGkD,gBAAnB,SACE,cAAC,GAAD,CAAiBjH,SAAU8G,UAMpBtS,kBAAKuS,I,gBCjBdG,GAA+B,SAAC,GAA2B,IAAzBzS,EAAwB,EAAxBA,SAAa6J,EAAW,kBAC9D,EAAiCvJ,qBAAWoF,GAApCP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,eAERsF,EAAS1L,uBACb,kBAAOmG,EAAOnF,EAAW,cAAC,IAAD,CAAU0S,GAAIrP,EAAOI,KAAKF,MACnD,CAAC4B,EAAMnF,IAGT,OAAIoF,EAAuB,KAEpB,cAAC,IAAD,2BAAWyE,GAAX,IAAiBa,OAAQA,MAGnB3K,kBAAK0S,I,SCLdE,GAAM,kBACV,cAAC,KAAD,UACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAcC,OAAK,EAAC3P,KAAMI,EAAOC,MAAME,KAAvC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOoP,OAAK,EAAC3P,KAAMI,EAAOI,KAAKF,EAAGsP,UAAWP,KAC7C,cAAC,IAAD,CAAUI,GAAIrP,EAAOC,MAAMC,YAMpBxD,kBAAK4S,ICbLG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAAS7I,OACP,cAAC,IAAM8I,WAAP,UACE,cAAC,GAAD,MAEFzF,SAAS0F,eAAe,SAM1BX,M,mBCfAvU,EAAOC,QAAU,CAAC,KAAO,iBAAiB,YAAc,wBAAwB,QAAU,oBAAoB,aAAe,yBAAyB,gBAAkB,4BAA4B,qBAAuB,iCAAiC,WAAa,uBAAuB,WAAa,uBAAuB,mBAAqB,iC,mBCAzVD,EAAOC,QAAU,CAAC,KAAO,wB","file":"static/js/main.f9df9536.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"sm_Container__2XsFN\",\"Container_Right\":\"sm_Container_Right__4_LV2\",\"Container_Right_Editor\":\"sm_Container_Right_Editor__1pL2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__1vhHM\",\"Container_Label\":\"styles_Container_Label__1Kc2T\",\"Container_Input\":\"styles_Container_Input__1nNq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header_Button\":\"sm_Header_Button__1uIxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pulse\":\"sm_Pulse__2GGmv\",\"pulsate\":\"sm_pulsate__1VjNH\",\"Pulse_Visible\":\"sm_Pulse_Visible__1MF8B\"};","enum Db {\n  Sections = 'sections',\n  Topics = 'topics',\n  Permissions = 'permissions',\n}\n\nexport { Db };\n","import { useCallback, useMemo, useState } from 'react';\n\nconst useToggle = (defaultState = false): [boolean, () => void, Function] => {\n  const [state, setState] = useState(defaultState);\n\n  const handleChangeState = useCallback(() => {\n    setState((prevState) => !prevState);\n  }, []);\n\n  return useMemo(\n    () => [state, handleChangeState, setState],\n    [state, setState, handleChangeState],\n  );\n};\n\nexport default useToggle;\n","import { createContext, memo, useCallback, useMemo, useState } from 'react';\nimport useToggle from 'hooks/useToggle';\n\nconst defaultDataContextState = {\n  markDown: '',\n  isEditing: false,\n  isLoading: false,\n};\n\nconst defaultActionsContextState = {\n  setMarkDown: (newOne: string) => {},\n  toggleIsEditing: () => {},\n  toggleIsLoading: () => {},\n};\n\nexport const GlobalDataContext = createContext<typeof defaultDataContextState>(\n  defaultDataContextState,\n);\n\nexport const GlobalActionsContext = createContext<\n  typeof defaultActionsContextState\n>(defaultActionsContextState);\n\nexport default memo(({ children }) => {\n  const [markDown, setMarkDown] = useState('');\n\n  const [isEditing, toggleIsEditing] = useToggle();\n\n  const [isLoading, toggleIsLoading] = useToggle();\n\n  const handleSetMarkDown = useCallback((incoming) => {\n    setMarkDown(incoming);\n  }, []);\n\n  return (\n    <GlobalDataContext.Provider\n      value={useMemo(\n        () => ({\n          markDown,\n          isEditing,\n          isLoading,\n        }),\n        [markDown, isEditing, isLoading],\n      )}\n    >\n      <GlobalActionsContext.Provider\n        value={useMemo(\n          () => ({\n            setMarkDown: handleSetMarkDown,\n            toggleIsEditing,\n            toggleIsLoading,\n          }),\n          [handleSetMarkDown, toggleIsEditing, toggleIsLoading],\n        )}\n      >\n        {children}\n      </GlobalActionsContext.Provider>\n    </GlobalDataContext.Provider>\n  );\n});\n","import { useCallback, useContext, useMemo, useState } from 'react';\nimport { GlobalActionsContext } from 'context/global';\n\nconst useFetch = () => {\n  const { toggleIsLoading } = useContext(GlobalActionsContext);\n\n  const [requestsInPending, setRequestsInPending] = useState(new Set());\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [errors, setErrors] = useState<null | any[]>(null);\n\n  const request = useCallback(\n    async <RO>(promise: Promise<RO>, withLocalLoading = false) => {\n      if (requestsInPending.has(promise)) return;\n\n      setIsLoading(true);\n\n      if (!withLocalLoading) {\n        toggleIsLoading();\n        setRequestsInPending(requestsInPending.add(promise));\n      }\n\n      let res;\n\n      try {\n        res = await promise;\n      } catch (e) {\n        res = e;\n        setErrors([e]);\n      } finally {\n        if (!withLocalLoading && !!requestsInPending.size) {\n          toggleIsLoading();\n        }\n        requestsInPending.delete(promise);\n        setIsLoading(false);\n      }\n\n      return res as RO;\n    },\n    [toggleIsLoading, requestsInPending],\n  );\n\n  return useMemo(\n    () => ({\n      isLoading,\n      errors,\n      request,\n    }),\n    [isLoading, errors, request],\n  );\n};\n\nexport default useFetch;\n","import { initializeApp } from 'firebase/app';\nimport { collection, getFirestore } from 'firebase/firestore';\nimport { Db } from 'constants/db';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID,\n} = process.env;\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID,\n};\n\nconst firebaseInstance = initializeApp(firebaseConfig);\n\nconst db = getFirestore();\n\n// TODO: MOVE TO CONTEXT\nconst sectionsCollection = collection(db, Db.Sections);\n\nconst topicsCollection = collection(db, Db.Topics);\n\nconst permissionsCollection = collection(db, Db.Permissions);\n\nexport {\n  firebaseInstance,\n  db,\n  sectionsCollection,\n  topicsCollection,\n  permissionsCollection,\n};\n","enum ActionType {\n  Delete = 'delete',\n  Edit = 'edit',\n  Add = 'add',\n}\n\nexport { ActionType };\n","import { useRouteMatch } from 'react-router-dom';\nimport { useMemo } from 'react';\n\nconst useGetParams = <T>(path: string) => {\n  const match = useRouteMatch(path);\n\n  return useMemo(() => match?.params as T | undefined, [match?.params]);\n};\n\nexport default useGetParams;\n","const ROUTES = {\n  topic: {\n    _: '/topic',\n    byId: '/topic/:topicId?',\n  },\n  auth: {\n    _: '/auth',\n  },\n};\n\nexport default ROUTES;\n","import {\n  createContext,\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport useFetch from 'hooks/useFetch';\nimport {\n  getDoc,\n  setDoc,\n  doc,\n  DocumentSnapshot,\n  DocumentData,\n} from 'firebase/firestore';\nimport { topicsCollection } from 'app/firebase';\nimport useGetParams from 'hooks/useGetParams';\nimport ROUTES from 'constants/routes';\nimport { GlobalActionsContext } from './global';\n\nconst defaultDataContextState = {};\n\nconst defaultActionsContextState = {\n  receiveDetails: (topicId: string) => {},\n  updateDetails: (update: TopicDetails) => {},\n};\n\nexport const TopicDetailsDataContext = createContext<TopicDetails>(\n  defaultDataContextState as TopicDetails,\n);\n\nexport const TopicDetailsActionsContext = createContext<\n  typeof defaultActionsContextState\n>(defaultActionsContextState);\n\nexport default memo(({ children }) => {\n  const params = useGetParams<TopicDetailsParams>(ROUTES.topic.byId);\n\n  const { setMarkDown } = useContext(GlobalActionsContext);\n\n  const [details, setDetails] = useState<KeyValue<TopicDetails>>(\n    defaultDataContextState,\n  );\n\n  const { request } = useFetch();\n\n  const receiveDetails = useCallback(\n    async (id: string) => {\n      if (details[id]) return details[id];\n\n      const d = doc(topicsCollection, id);\n\n      const res = await request<DocumentSnapshot<DocumentData>>(getDoc(d));\n\n      if (res) {\n        setDetails((prevState) => ({\n          ...prevState,\n          [id]: {\n            ...(res.data() as TopicDetails),\n            id,\n          },\n        }));\n      }\n\n      return res;\n    },\n    [details, request],\n  );\n\n  const updateDetails = useCallback(\n    async (updated: TopicDetails, local = false) => {\n      const prevDetails = details[params?.topicId as string];\n\n      const updatedDetails = {\n        ...prevDetails,\n        ...updated,\n      };\n\n      if (!local) {\n        const d = doc(topicsCollection, updated.id);\n\n        const updatedDetails = {\n          ...prevDetails,\n          ...updated,\n        };\n\n        await request(setDoc(d, updatedDetails));\n      }\n\n      setDetails((prevState) => ({\n        ...prevState,\n        [params?.topicId as string]: updatedDetails,\n      }));\n    },\n    [request, details, params?.topicId],\n  );\n\n  useEffect(() => {\n    (async () => {\n      if (params?.topicId && !details[params.topicId]) {\n        await receiveDetails(params.topicId);\n      }\n    })();\n  }, [params?.topicId, receiveDetails, details]);\n\n  useEffect(() => {\n    if (params?.topicId && details[params.topicId]) {\n      setMarkDown(details[params.topicId].content);\n    }\n  }, [setMarkDown, details, params?.topicId]);\n\n  return (\n    <TopicDetailsDataContext.Provider\n      value={useMemo(\n        () => details[params?.topicId || ''],\n        [details, params?.topicId],\n      )}\n    >\n      <TopicDetailsActionsContext.Provider\n        value={useMemo(\n          () => ({\n            receiveDetails,\n            updateDetails,\n          }),\n          [receiveDetails, updateDetails],\n        )}\n      >\n        {children}\n      </TopicDetailsActionsContext.Provider>\n    </TopicDetailsDataContext.Provider>\n  );\n});\n","import React, {\n  useState,\n  useEffect,\n  createContext,\n  memo,\n  useCallback,\n  useMemo,\n  useContext,\n} from 'react';\nimport {\n  getAuth,\n  signInWithEmailLink,\n  sendSignInLinkToEmail,\n  signOut,\n} from 'firebase/auth';\nimport { firebaseInstance, permissionsCollection } from 'app/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { GlobalActionsContext } from './global';\nimport ROUTES from 'constants/routes';\nimport { UserPermissions, UserWithPermissions } from 'types/user';\nimport {\n  doc,\n  DocumentData,\n  DocumentSnapshot,\n  getDoc,\n} from 'firebase/firestore';\nimport useFetch from 'hooks/useFetch';\n\nconst auth = getAuth(firebaseInstance);\n\nconst INPUT = 'INPUT';\n\nconst DEFAULT_PERMISSIONS: UserPermissions = {\n  write: false,\n  create: false,\n};\n\nconst defaultDataContextState = {\n  user: null as Nullable<UserWithPermissions>,\n  isInitializing: true,\n};\n\nconst defaultActionsContextState = {\n  sendLink: (email: string) => {},\n  signIn: (code: string) => {},\n  logout: () => {},\n};\n\nexport const AuthDataContext = createContext<typeof defaultDataContextState>(\n  defaultDataContextState,\n);\n\nexport const AuthActionsContext = createContext<\n  typeof defaultActionsContextState\n>(defaultActionsContextState);\n\nexport default memo(({ children }) => {\n  const [user, setUser] = useState<Nullable<UserWithPermissions>>(null);\n\n  const { toggleIsLoading } = useContext(GlobalActionsContext);\n\n  const { request } = useFetch();\n\n  const [isInitializing, setIsInitializing] = useState(true);\n\n  const { replace, location } = useHistory();\n\n  const sendLink = useCallback(\n    async (email) => {\n      toggleIsLoading();\n      await sendSignInLinkToEmail(auth, email, {\n        url: window.location.href,\n        handleCodeInApp: true,\n      });\n\n      localStorage.setItem(INPUT, email);\n      toggleIsLoading();\n    },\n    [toggleIsLoading],\n  );\n\n  const getUserPermissions = useCallback(\n    async (id: string) => {\n      const d = doc(permissionsCollection, id);\n      return await request<DocumentSnapshot<DocumentData>>(getDoc(d));\n    },\n    [request],\n  );\n\n  const signIn = useCallback(\n    async (code) => {\n      toggleIsLoading();\n\n      const input = localStorage.getItem(INPUT);\n\n      const result = await signInWithEmailLink(auth, input as string, code);\n\n      const permissionsResult = await getUserPermissions(result.user.uid);\n\n      setUser({\n        ...result.user,\n        permissions:\n          (permissionsResult?.data() as UserPermissions) || DEFAULT_PERMISSIONS,\n      });\n\n      localStorage.removeItem(INPUT);\n      toggleIsLoading();\n      replace(ROUTES.topic._);\n    },\n    [replace, toggleIsLoading, getUserPermissions],\n  );\n\n  const logout = useCallback(async () => {\n    toggleIsLoading();\n    await signOut(auth);\n    setUser(null);\n    toggleIsLoading();\n  }, [toggleIsLoading]);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      let permissionsResult;\n\n      if (user) {\n        permissionsResult = await getUserPermissions(user.uid);\n\n        setUser({\n          ...user,\n          permissions:\n            (permissionsResult?.data() as UserPermissions) ||\n            DEFAULT_PERMISSIONS,\n        });\n      }\n\n      setIsInitializing(false);\n\n      if (user && location.pathname.includes(ROUTES.auth._)) {\n        replace(ROUTES.topic._);\n      }\n    });\n\n    return () => unsubscribe();\n  }, [location, replace, getUserPermissions]);\n\n  return (\n    <AuthDataContext.Provider\n      value={useMemo(\n        () => ({\n          user,\n          isInitializing,\n        }),\n        [user, isInitializing],\n      )}\n    >\n      <AuthActionsContext.Provider\n        value={useMemo(\n          () => ({\n            sendLink,\n            signIn,\n            logout,\n          }),\n          [sendLink, signIn, logout],\n        )}\n      >\n        {children}\n      </AuthActionsContext.Provider>\n    </AuthDataContext.Provider>\n  );\n});\n","import { WhereFilterOp } from 'firebase/firestore';\n\nconst getQueryStaticParts = (fieldName: string, type: string) => ({\n  fieldName,\n  type: type as WhereFilterOp,\n});\n\nexport default getQueryStaticParts;\n","import {\n  useCallback,\n  memo,\n  useState,\n  useMemo,\n  createContext,\n  useEffect,\n} from 'react';\nimport {\n  DocumentData,\n  getDocs,\n  orderBy,\n  query,\n  QuerySnapshot,\n  where,\n} from 'firebase/firestore';\nimport useFetch from 'hooks/useFetch';\nimport getQueryStaticParts from 'utils/firestoreQueryBuilder';\nimport { sectionsCollection } from 'app/firebase';\nimport { ActionType } from 'constants/global';\n\nconst GET_FILTERED_SECTIONS_QUERY = getQueryStaticParts('isArchived', '!=');\n\nconst SECTIONS_INITIAL_STATE = {};\n\nconst defaultDataContextState = {\n  sections: {} as KeyValue<Section>,\n};\n\nconst defaultActionsContextState = {\n  handleManageSection: (action: ActionType, section: Partial<Section>) => {},\n};\n\nexport const SectionsDataContext = createContext<\n  typeof defaultDataContextState\n>(defaultDataContextState);\n\nexport const SectionsActionsContext = createContext<\n  typeof defaultActionsContextState\n>(defaultActionsContextState);\n\nexport default memo(({ children }) => {\n  const { request } = useFetch();\n\n  const [sections, setSections] = useState<KeyValue<Section>>(\n    SECTIONS_INITIAL_STATE,\n  );\n\n  useEffect(() => {\n    (async () => {\n      const q = query(\n        sectionsCollection,\n        where(\n          GET_FILTERED_SECTIONS_QUERY.fieldName,\n          GET_FILTERED_SECTIONS_QUERY.type,\n          true,\n        ),\n        orderBy(GET_FILTERED_SECTIONS_QUERY.fieldName),\n        orderBy('name'),\n      );\n\n      const sectionsDocs = await request<QuerySnapshot<DocumentData>>(\n        getDocs(q),\n      );\n\n      let normalizedSections: KeyValue<Section> = {};\n\n      if (sectionsDocs && Array.isArray(sectionsDocs?.docs)) {\n        sectionsDocs.docs.forEach((doc) => {\n          const { name } = doc.data();\n          normalizedSections = {\n            ...normalizedSections,\n            [doc.id]: {\n              id: doc.id,\n              name,\n            },\n          };\n        });\n      }\n\n      setSections(normalizedSections);\n    })();\n  }, [request]);\n\n  const handleManageSection = useCallback((type: ActionType, section) => {\n    setSections((prevState) => {\n      if (type === ActionType.Delete) {\n        const { [section.id]: exclude, ...rest } = prevState;\n        return rest;\n      }\n\n      return {\n        ...prevState,\n        [section.id]:\n          type === ActionType.Add\n            ? section\n            : {\n                ...prevState[section.id],\n                ...section,\n              },\n      };\n    });\n  }, []);\n\n  return (\n    <SectionsDataContext.Provider\n      value={useMemo(\n        () => ({\n          sections,\n        }),\n        [sections],\n      )}\n    >\n      <SectionsActionsContext.Provider\n        value={useMemo(\n          () => ({\n            handleManageSection,\n          }),\n          [handleManageSection],\n        )}\n      >\n        {children}\n      </SectionsActionsContext.Provider>\n    </SectionsDataContext.Provider>\n  );\n});\n","import { Db } from 'constants/db';\nimport { ActionType } from 'constants/global';\n\nexport enum ActionEntity {\n  Topics = Db.Topics,\n  Sections = Db.Sections,\n}\n\nexport interface SideBarActiveAction {\n  type: ActionType;\n  entity: ActionEntity;\n  id?: string;\n  parentId?: string;\n  content?: string;\n}\n","import { useCallback, memo, useState, useMemo, createContext } from 'react';\nimport {\n  DocumentData,\n  getDocs,\n  orderBy,\n  query,\n  QuerySnapshot,\n  where,\n} from 'firebase/firestore';\nimport useFetch from 'hooks/useFetch';\nimport getQueryStaticParts from 'utils/firestoreQueryBuilder';\nimport { topicsCollection } from 'app/firebase';\nimport { ActionType } from 'constants/global';\n\nconst GET_TOPICS_QUERY = getQueryStaticParts('sectionId', '==');\n\nconst GET_FILTERED_TOPICS_QUERY = getQueryStaticParts('isArchived', '!=');\n\nconst TOPICS_INITIAL_STATE = {};\n\nconst defaultDataContextState = {\n  topics: {} as KeyValue<KeyValue<Topic>>,\n};\n\nconst defaultActionsContextState = {\n  receiveTopics: (sectionId: string) => {},\n  handleManageTopic: (action: ActionType, topic: Partial<Topic>) => {},\n};\n\nexport const TopicsDataContext = createContext<typeof defaultDataContextState>(\n  defaultDataContextState,\n);\n\nexport const TopicsActionsContext = createContext<\n  typeof defaultActionsContextState\n>(defaultActionsContextState);\n\nexport default memo(({ children }) => {\n  const { request } = useFetch();\n\n  const [topics, setTopics] =\n    useState<KeyValue<KeyValue<Topic>>>(TOPICS_INITIAL_STATE);\n\n  const receiveTopics = useCallback(\n    async (sectionId: string) => {\n      if (topics[sectionId]) return topics[sectionId];\n\n      const q = query(\n        topicsCollection,\n        where(\n          GET_FILTERED_TOPICS_QUERY.fieldName,\n          GET_FILTERED_TOPICS_QUERY.type,\n          true,\n        ),\n        orderBy(GET_FILTERED_TOPICS_QUERY.fieldName),\n        where(GET_TOPICS_QUERY.fieldName, GET_TOPICS_QUERY.type, sectionId),\n        orderBy('name'),\n      );\n\n      const topicsDocs = await request<QuerySnapshot<DocumentData>>(getDocs(q));\n\n      let normalizedTopics: KeyValue<Topic> = {};\n\n      if (topicsDocs) {\n        topicsDocs.forEach((doc) => {\n          const { name } = doc.data();\n          normalizedTopics = {\n            ...normalizedTopics,\n            [doc.id]: {\n              id: doc.id,\n              name,\n              sectionId,\n            },\n          };\n        });\n      }\n\n      setTopics((prevState) => ({\n        ...prevState,\n        [sectionId]: normalizedTopics,\n      }));\n\n      return normalizedTopics;\n    },\n    [topics, request],\n  );\n\n  const handleManageTopic = useCallback((type: ActionType, topic) => {\n    setTopics((prevState) => {\n      if (type === ActionType.Delete) {\n        const { [topic.id]: exclude, ...rest } = prevState[topic.sectionId];\n\n        return {\n          ...prevState,\n          [topic.sectionId]: {\n            ...rest,\n          },\n        };\n      }\n\n      return {\n        ...prevState,\n        [topic.sectionId]: {\n          ...prevState[topic.sectionId],\n          [topic.id]:\n            type === ActionType.Add\n              ? topic\n              : {\n                  ...prevState[topic.id],\n                  ...topic,\n                },\n        },\n      };\n    });\n  }, []);\n\n  return (\n    <TopicsDataContext.Provider\n      value={useMemo(\n        () => ({\n          topics,\n        }),\n        [topics],\n      )}\n    >\n      <TopicsActionsContext.Provider\n        value={useMemo(\n          () => ({\n            receiveTopics,\n            handleManageTopic,\n          }),\n          [receiveTopics, handleManageTopic],\n        )}\n      >\n        {children}\n      </TopicsActionsContext.Provider>\n    </TopicsDataContext.Provider>\n  );\n});\n","import { memo } from 'react';\nimport GlobalContext from 'context/global';\nimport TopicDetailsContext from 'context/topicsDetails';\nimport AuthContext from 'context/auth';\nimport SectionsContext from 'context/sections';\nimport TopicsContext from 'context/topics';\n\nexport default memo(({ children }) => (\n  <GlobalContext>\n    <AuthContext>\n      <TopicDetailsContext>\n        <SectionsContext>\n          <TopicsContext>{children}</TopicsContext>\n        </SectionsContext>\n      </TopicDetailsContext>\n    </AuthContext>\n  </GlobalContext>\n));\n","const DEFAULT_VIEW = {\n  menu: false,\n  md: false,\n  html: true,\n};\n\nexport { DEFAULT_VIEW };\n","import { GlobalActionsContext, GlobalDataContext } from 'context/global';\nimport { useContext, useRef, useEffect, useMemo, useCallback } from 'react';\nimport MdEditor from 'react-markdown-editor-lite';\nimport MarkdownIt from 'markdown-it';\n\nconst mdParser = new MarkdownIt();\n\nconst useEditor = () => {\n  const { isEditing, markDown } = useContext(GlobalDataContext);\n\n  const { setMarkDown } = useContext(GlobalActionsContext);\n\n  const mdEditorRef = useRef<null | MdEditor>(null);\n\n  const handleMarkDownChange = useCallback(\n    ({ text }) => {\n      setMarkDown(text);\n    },\n    [setMarkDown],\n  );\n\n  const handleRenderEditorHTML = useCallback((text) => {\n    return mdParser.render(text);\n  }, []);\n\n  useEffect(() => {\n    if (mdEditorRef.current) {\n      mdEditorRef.current.setView({\n        menu: isEditing,\n        md: isEditing,\n        html: true,\n      });\n    }\n  }, [isEditing]);\n\n  return useMemo(\n    () => ({\n      mdEditorRef,\n      handleRenderEditorHTML,\n      handleMarkDownChange,\n      markDown,\n      isEditing,\n    }),\n    [\n      mdEditorRef,\n      handleMarkDownChange,\n      handleRenderEditorHTML,\n      markDown,\n      isEditing,\n    ],\n  );\n};\n\nexport default useEditor;\n","import React, { memo } from 'react';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\n\nimport { DEFAULT_VIEW } from './config';\nimport useEditor from './useEditor';\nimport './sm.module.scss';\n\nconst Editor = () => {\n  const {\n    mdEditorRef,\n    handleRenderEditorHTML,\n    handleMarkDownChange,\n    markDown,\n    isEditing,\n  } = useEditor();\n\n  return (\n    <MdEditor\n      ref={mdEditorRef}\n      renderHTML={handleRenderEditorHTML}\n      value={markDown}\n      onChange={handleMarkDownChange}\n      readOnly={!isEditing}\n      view={DEFAULT_VIEW}\n    />\n  );\n};\n\nexport default memo(Editor);\n","const FIELDS = {\n  INPUT: {\n    name: 'input',\n    validationRules: {\n      required: true,\n    },\n  },\n};\n\nexport { FIELDS };\n","import { useForm, Controller } from 'react-hook-form';\nimport { memo, useCallback } from 'react';\nimport { SingleInputProps, SingleInputInitialValues } from './singleInput';\nimport { ArrowRightOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport { FIELDS } from './config';\nimport './styles.module.scss';\n\nconst SingleInput = ({ onSubmit, initialValues }: SingleInputProps) => {\n  const { handleSubmit, control } = useForm({ defaultValues: initialValues });\n\n  const renderInput = useCallback(\n    ({ field }) => (\n      <Input\n        {...field}\n        addonAfter={\n          <button type=\"submit\">\n            <ArrowRightOutlined />\n          </button>\n        }\n      />\n    ),\n    [],\n  );\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        control={control}\n        rules={FIELDS.INPUT.validationRules}\n        name={FIELDS.INPUT.name as keyof SingleInputInitialValues}\n        render={renderInput}\n      />\n    </form>\n  );\n};\n\nexport default memo(SingleInput);\n","import {\n  SyntheticEvent,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\nimport { doc, setDoc, updateDoc } from 'firebase/firestore';\nimport {\n  ActionEntity,\n  SideBarActiveAction,\n} from 'components/organisms/sideBar/sideBarTypes';\nimport { sectionsCollection, topicsCollection } from 'app/firebase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ActionType } from 'constants/global';\nimport { SectionsActionsContext } from 'context/sections';\nimport { TopicsActionsContext } from 'context/topics';\n\nconst getRefs = (id?: string) => ({\n  [ActionEntity.Topics]: doc(topicsCollection, id),\n  [ActionEntity.Sections]: doc(sectionsCollection, id),\n});\n\nconst useManageEntities = () => {\n  const [activeAction, setActiveAction] =\n    useState<Nullable<SideBarActiveAction>>(null);\n\n  const { handleManageSection } = useContext(SectionsActionsContext);\n\n  const { handleManageTopic } = useContext(TopicsActionsContext);\n\n  const handleResetAction = useCallback(() => {\n    setActiveAction(null);\n  }, []);\n\n  const handleUpdateEntity = useCallback(\n    (entity: ActionEntity, type: ActionType, data) => {\n      const cbs = {\n        [ActionEntity.Sections]: handleManageSection,\n        [ActionEntity.Topics]: handleManageTopic,\n      };\n\n      cbs[entity](type, data);\n    },\n    [handleManageTopic, handleManageSection],\n  );\n\n  const handleDeleteEntity = useCallback(\n    async ({ parentId: sectionId, ...params }: SideBarActiveAction) => {\n      const refs = getRefs(params.id);\n\n      const ref = refs[params.entity];\n\n      const updateData = { isArchived: true };\n\n      await updateDoc(ref, updateData);\n\n      handleUpdateEntity(params.entity, ActionType.Delete, {\n        ...params,\n        ...updateData,\n        sectionId,\n      });\n\n      handleResetAction();\n    },\n    [handleResetAction, handleUpdateEntity],\n  );\n\n  const handleAddEditEntity = useCallback(\n    async ({ input: name }) => {\n      const id = activeAction?.id || uuidv4();\n\n      const content = activeAction?.id ? undefined : '';\n\n      const sectionId = activeAction?.parentId;\n\n      const refs = getRefs(id);\n\n      const ref = refs[(activeAction as SideBarActiveAction).entity];\n\n      const data = {\n        name,\n        isArchived: false,\n        ...(sectionId ? { sectionId } : {}),\n        ...(activeAction?.entity === ActionEntity.Topics && !activeAction?.id\n          ? { content }\n          : {}),\n      };\n\n      if (activeAction?.id) {\n        await updateDoc(ref, data);\n      } else {\n        await setDoc(ref, data);\n      }\n\n      handleUpdateEntity(\n        activeAction?.entity as ActionEntity,\n        activeAction?.type as ActionType,\n        { ...data, id },\n      );\n\n      handleResetAction();\n    },\n    [activeAction, handleResetAction, handleUpdateEntity],\n  );\n\n  const handleManageEntityClick = useCallback(\n    (params: SideBarActiveAction) => (ev: SyntheticEvent) => {\n      ev.stopPropagation();\n\n      const cbs = {\n        [ActionType.Add]: setActiveAction,\n        [ActionType.Edit]: setActiveAction,\n        [ActionType.Delete]: handleDeleteEntity,\n      };\n\n      cbs[params.type](params);\n    },\n    [handleDeleteEntity],\n  );\n\n  return useMemo(\n    () => ({\n      handleManageEntityClick,\n      activeAction,\n      handleAddEditEntity,\n      handleResetAction,\n    }),\n    [\n      handleManageEntityClick,\n      activeAction,\n      handleAddEditEntity,\n      handleResetAction,\n    ],\n  );\n};\n\nexport default useManageEntities;\n","import { RefObject, useEffect, useRef } from 'react';\n\ntype ListenerEvent = MouseEvent & {\n  target: Element;\n};\n\nconst useClickOutside = (\n  ref: RefObject<HTMLElement>,\n  callback: (event: MouseEvent) => void,\n  eventType = 'click',\n) => {\n  // region *******************************DATA*********************************\n  const handlerRef = useRef(callback);\n  // endregion\n\n  // region ******************************EFFECTS*******************************\n  useEffect(() => {\n    handlerRef.current = callback;\n  });\n\n  useEffect(() => {\n    const listener = (event: ListenerEvent) => {\n      if (ref && ref.current) {\n        if (event.target.shadowRoot) {\n          if (!event.target.shadowRoot.contains(ref.current)) {\n            handlerRef.current(event);\n          }\n        } else if (!ref.current.contains(event.target)) {\n          handlerRef.current(event);\n        }\n      }\n    };\n\n    document.addEventListener(eventType, listener as EventListener);\n\n    document.addEventListener('touchstart', listener as EventListener);\n\n    return () => {\n      document.removeEventListener(eventType, listener as EventListener);\n\n      document.removeEventListener('touchstart', listener as EventListener);\n    };\n  });\n  // endregion\n};\n\nexport default useClickOutside;\n","import { useCallback, useContext, useMemo, useRef } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  TopicDetailsActionsContext,\n  TopicDetailsDataContext,\n} from 'context/topicsDetails';\nimport ROUTES from 'constants/routes';\nimport { AuthDataContext } from 'context/auth';\nimport useManageEntities from 'hooks/useManageEntities';\nimport { SectionsDataContext } from 'context/sections';\nimport { TopicsActionsContext, TopicsDataContext } from 'context/topics';\nimport useClickOutside from 'hooks/useClickOutside';\n\nconst useSideBar = () => {\n  const {\n    activeAction,\n    handleManageEntityClick,\n    handleAddEditEntity,\n    handleResetAction,\n  } = useManageEntities();\n\n  const formWrapRef = useRef<Nullable<HTMLDivElement>>(null);\n\n  const { topicId } = useParams<TopicDetailsParams>();\n\n  const details = useContext(TopicDetailsDataContext);\n\n  const { user } = useContext(AuthDataContext);\n\n  const { sections } = useContext(SectionsDataContext);\n\n  const { push } = useHistory();\n\n  const canCreate = useMemo(() => user?.permissions.write, [user]);\n\n  const { receiveDetails } = useContext(TopicDetailsActionsContext);\n\n  const { topics } = useContext(TopicsDataContext);\n\n  const { receiveTopics } = useContext(TopicsActionsContext);\n\n  const selectedKeys = useMemo(() => [details?.id], [details?.id]);\n\n  const formInitialValues = useMemo(\n    () =>\n      activeAction?.content\n        ? {\n            input: activeAction.content,\n          }\n        : undefined,\n    [activeAction],\n  );\n\n  const handleOpenSection = useCallback(\n    async ({ key }) => {\n      await receiveTopics(key);\n    },\n    [receiveTopics],\n  );\n\n  const handleTopicClick = useCallback(\n    ({ key }) => {\n      if (key !== topicId) {\n        push(ROUTES.topic.byId.replace(':topicId', key));\n      }\n    },\n    [push, topicId],\n  );\n\n  const handleTopicHover = useCallback(\n    ({ key }) => {\n      receiveDetails(key);\n    },\n    [receiveDetails],\n  );\n\n  useClickOutside(formWrapRef, activeAction ? handleResetAction : () => {});\n\n  return useMemo(\n    () => ({\n      handleTopicClick,\n      topics,\n      sections,\n      handleOpenSection,\n      handleTopicHover,\n      details,\n      selectedKeys,\n      canCreate,\n      handleManageEntityClick,\n      activeAction,\n      handleAddEditEntity,\n      formInitialValues,\n      formWrapRef,\n      handleResetAction,\n    }),\n    [\n      handleTopicClick,\n      topics,\n      sections,\n      handleOpenSection,\n      handleTopicHover,\n      details,\n      selectedKeys,\n      canCreate,\n      handleManageEntityClick,\n      activeAction,\n      handleAddEditEntity,\n      formInitialValues,\n      formWrapRef,\n      handleResetAction,\n    ],\n  );\n};\n\nexport default useSideBar;\n","import { Layout, Menu, Popover } from 'antd';\nimport { memo, useCallback } from 'react';\nimport {\n  DeleteFilled,\n  EditFilled,\n  PlusCircleOutlined,\n  SettingFilled,\n} from '@ant-design/icons';\nimport sharedSm from 'styles/shared.module.scss';\nimport { ActionType } from 'constants/global';\nimport SingleInputForm from 'components/organisms/form/singleInput';\n\nimport sm from './sm.module.scss';\nimport useSideBar from './useSideBar';\nimport { ActionEntity } from './sideBarTypes';\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\nconst SideBar = () => {\n  const {\n    handleManageEntityClick,\n    activeAction,\n    topics,\n    sections,\n    handleTopicClick,\n    handleOpenSection,\n    handleTopicHover,\n    details,\n    selectedKeys,\n    canCreate,\n    handleAddEditEntity,\n    formInitialValues,\n    formWrapRef,\n  } = useSideBar();\n\n  const renderTopic = useCallback(\n    (topic) => (\n      <Menu.Item\n        icon={\n          <Popover\n            key={topic.id}\n            className={sm.Topic}\n            content={\n              <>\n                <EditFilled\n                  onClick={handleManageEntityClick({\n                    id: topic.id,\n                    content: topic.name,\n                    type: ActionType.Edit,\n                    entity: ActionEntity.Topics,\n                    parentId: topic.sectionId,\n                  })}\n                  className={sm.Topic_Edit}\n                />\n                <DeleteFilled\n                  onClick={handleManageEntityClick({\n                    id: topic.id,\n                    type: ActionType.Delete,\n                    entity: ActionEntity.Topics,\n                    parentId: topic.sectionId,\n                  })}\n                />\n              </>\n            }\n          >\n            <SettingFilled />\n          </Popover>\n        }\n        onMouseEnter={handleTopicHover}\n        onClick={handleTopicClick}\n        key={topic.id}\n      >\n        {topic.name}\n      </Menu.Item>\n    ),\n    [handleTopicClick, handleTopicHover, handleManageEntityClick],\n  );\n\n  const renderSections = useCallback(\n    (section: Section) => (\n      <SubMenu\n        className={sm.Section}\n        key={section.id}\n        title={section.name}\n        onTitleMouseEnter={handleOpenSection}\n        onTitleClick={handleOpenSection}\n        icon={\n          <Popover\n            key={section.id}\n            className={sm.Section}\n            content={\n              <>\n                <EditFilled\n                  onClick={handleManageEntityClick({\n                    id: section.id,\n                    content: section.name,\n                    type: ActionType.Edit,\n                    entity: ActionEntity.Sections,\n                  })}\n                  className={sm.Section_Edit}\n                />\n                <DeleteFilled\n                  onClick={handleManageEntityClick({\n                    id: section.id,\n                    type: ActionType.Delete,\n                    entity: ActionEntity.Sections,\n                  })}\n                />\n              </>\n            }\n          >\n            <SettingFilled />\n          </Popover>\n        }\n      >\n        {canCreate && (\n          <button\n            key={`addTo-${section.id}`}\n            onClick={handleManageEntityClick({\n              type: ActionType.Add,\n              parentId: section.id,\n              entity: ActionEntity.Topics,\n            })}\n            className={sm.AddMenuItem}\n          >\n            <PlusCircleOutlined className={sharedSm.Icon} />\n          </button>\n        )}\n        {Object.values(topics[section.id] || {}).map(renderTopic)}\n      </SubMenu>\n    ),\n    [\n      handleOpenSection,\n      topics,\n      renderTopic,\n      canCreate,\n      handleManageEntityClick,\n    ],\n  );\n\n  return (\n    <>\n      {activeAction && (\n        <div className={sm.Background}>\n          <div ref={formWrapRef} className={sm.Background_Content}>\n            <SingleInputForm\n              onSubmit={handleAddEditEntity}\n              initialValues={formInitialValues}\n            />\n          </div>\n        </div>\n      )}\n\n      <Sider>\n        <div className={sm.Logo}>\n          <span>learn</span>\n        </div>\n\n        {!!Object.values(sections).length && (\n          <Menu\n            mode=\"inline\"\n            selectedKeys={selectedKeys}\n            activeKey={details?.sectionId}\n          >\n            {canCreate && (\n              <button\n                key=\"addToSections\"\n                onClick={handleManageEntityClick({\n                  type: ActionType.Add,\n                  entity: ActionEntity.Sections,\n                })}\n                className={sm.AddMenuItem}\n              >\n                <PlusCircleOutlined className={sharedSm.Icon} />\n              </button>\n            )}\n\n            {Object.values(sections).map(renderSections)}\n          </Menu>\n        )}\n      </Sider>\n    </>\n  );\n};\n\nexport default memo(SideBar);\n","import { useCallback, useContext, useMemo } from 'react';\nimport { GlobalActionsContext, GlobalDataContext } from 'context/global';\nimport {\n  TopicDetailsActionsContext,\n  TopicDetailsDataContext,\n} from 'context/topicsDetails';\nimport { AuthDataContext } from 'context/auth';\nimport { SectionsDataContext } from 'context/sections';\n\nconst useHeader = () => {\n  const { toggleIsEditing } = useContext(GlobalActionsContext);\n\n  const { isEditing, markDown } = useContext(GlobalDataContext);\n\n  const { user } = useContext(AuthDataContext);\n\n  const canEdit = useMemo(() => user?.permissions.write, [user]);\n\n  const details = useContext(TopicDetailsDataContext);\n\n  const { updateDetails } = useContext(TopicDetailsActionsContext);\n\n  const { sections } = useContext(SectionsDataContext);\n\n  const handleSaveClick = useCallback(() => {\n    if (details.content !== markDown) {\n      updateDetails({\n        ...details,\n        content: markDown,\n      });\n    }\n    toggleIsEditing();\n  }, [updateDetails, details, markDown, toggleIsEditing]);\n\n  return useMemo(\n    () => ({\n      isEditing,\n      toggleIsEditing,\n      subTitle: details?.name,\n      title: sections[details?.sectionId || '']?.name,\n      handleSaveClick,\n      canEdit,\n    }),\n    [canEdit, sections, details, isEditing, toggleIsEditing, handleSaveClick],\n  );\n};\n\nexport default useHeader;\n","import { memo } from 'react';\nimport { PageHeader } from 'antd';\nimport { EditOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport sharedSm from 'styles/shared.module.scss';\n\nimport sm from './sm.module.scss';\nimport useHeader from './useHeader';\n\nconst Header = () => {\n  const {\n    isEditing,\n    toggleIsEditing,\n    subTitle,\n    title,\n    handleSaveClick,\n    canEdit,\n  } = useHeader();\n\n  return (\n    <PageHeader\n      className={sm.Header}\n      title={title}\n      subTitle={subTitle}\n      extra={\n        canEdit && subTitle ? (\n          <button\n            className={sm.Header_Button}\n            onClick={isEditing ? handleSaveClick : toggleIsEditing}\n          >\n            {isEditing ? (\n              <CheckCircleOutlined className={sharedSm.Icon} />\n            ) : (\n              <EditOutlined className={sharedSm.Icon} />\n            )}\n          </button>\n        ) : undefined\n      }\n    />\n  );\n};\n\nexport default memo(Header);\n","import { memo, useMemo } from 'react';\nimport sm from './sm.module.scss';\nimport cn from 'classnames';\n\ninterface Props {\n  isVisible?: boolean;\n}\n\nconst Pulse = ({ isVisible }: Props) => (\n  <div\n    className={cn(\n      sm.Pulse,\n      useMemo(\n        () => ({\n          [sm.Pulse_Visible]: isVisible,\n        }),\n        [isVisible],\n      ),\n    )}\n  />\n);\n\nexport default memo(Pulse);\n","import { useContext, useMemo } from 'react';\nimport { GlobalDataContext } from 'context/global';\n\nconst useTopic = () => {\n  const { isLoading } = useContext(GlobalDataContext);\n\n  return useMemo(\n    () => ({\n      isLoading,\n    }),\n    [isLoading],\n  );\n};\n\nexport default useTopic;\n","import React, { memo } from 'react';\nimport Editor from 'components/organisms/editor';\nimport SideBar from 'components/organisms/sideBar';\nimport Header from 'components/organisms/header';\nimport Pulse from 'components/atoms/puls';\n\nimport sm from './sm.module.scss';\nimport useTopic from './useTopic';\n\nconst Topic = () => {\n  const { isLoading } = useTopic();\n\n  return (\n    <div className={sm.Container}>\n      <Pulse isVisible={isLoading} />\n      <SideBar />\n      <div className={sm.Container_Right}>\n        <Header />\n        <div className={sm.Container_Right_Editor}>\n          <Editor />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Topic);\n","import { useCallback, useContext, useEffect, useMemo } from 'react';\nimport { AuthActionsContext, AuthDataContext } from 'context/auth';\nimport { useLocation } from 'react-router-dom';\nimport { GlobalDataContext } from 'context/global';\n\nconst useLogin = () => {\n  const { search } = useLocation();\n\n  const { sendLink, signIn } = useContext(AuthActionsContext);\n\n  const { isLoading } = useContext(GlobalDataContext);\n\n  const { user, isInitializing } = useContext(AuthDataContext);\n\n  const handleSubmitForm = useCallback(\n    ({ input }) => {\n      sendLink(input);\n    },\n    [sendLink],\n  );\n\n  useEffect(() => {\n    if (search && !user && !isInitializing) {\n      signIn(window.location.href);\n    }\n  }, [user, signIn, search, isInitializing]);\n\n  return useMemo(\n    () => ({\n      handleSubmitForm,\n      isLoading,\n    }),\n    [handleSubmitForm, isLoading],\n  );\n};\n\nexport default useLogin;\n","import { memo } from 'react';\nimport SingleInputForm from 'components/organisms/form/singleInput';\nimport useLogin from './useLogin';\nimport sm from './styles.module.scss';\nimport Pulse from 'components/atoms/puls';\n\nconst Login = () => {\n  const { handleSubmitForm, isLoading } = useLogin();\n\n  return (\n    <div className={sm.Container}>\n      <Pulse isVisible={isLoading} />\n      <div className={sm.Container_Label}>\n        <span>learn</span>\n      </div>\n      <div className={sm.Container_Input}>\n        <SingleInputForm onSubmit={handleSubmitForm} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Login);\n","import { useContext, memo, FC, useCallback } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { AuthDataContext } from 'context/auth';\nimport ROUTES from 'constants/routes';\n\nconst PrivateRoute: FC<RouteProps> = ({ children, ...rest }) => {\n  const { user, isInitializing } = useContext(AuthDataContext);\n\n  const render = useCallback(\n    () => (user ? children : <Redirect to={ROUTES.auth._} />),\n    [user, children],\n  );\n\n  if (isInitializing) return null;\n\n  return <Route {...rest} render={render} />;\n};\n\nexport default memo(PrivateRoute);\n","import { memo } from 'react';\nimport Providers from './providers';\nimport Topic from 'pages/topic';\nimport Login from 'pages/login';\nimport PrivateRoute from 'components/organisms/privateRoute';\nimport ROUTES from 'constants/routes';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nconst App = () => (\n  <Router>\n    <Providers>\n      <Switch>\n        <PrivateRoute exact path={ROUTES.topic.byId}>\n          <Topic />\n        </PrivateRoute>\n        <Route exact path={ROUTES.auth._} component={Login} />\n        <Redirect to={ROUTES.topic._} />\n      </Switch>\n    </Providers>\n  </Router>\n);\n\nexport default memo(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/index.scss';\nimport App from 'app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"sm_Logo__2U1Hl\",\"AddMenuItem\":\"sm_AddMenuItem__2jzuR\",\"Section\":\"sm_Section__3d_N3\",\"Section_Edit\":\"sm_Section_Edit__3e83X\",\"Section_Content\":\"sm_Section_Content__21rJO\",\"Section_Content_Icon\":\"sm_Section_Content_Icon__UJax7\",\"Topic_Edit\":\"sm_Topic_Edit__1_JnU\",\"Background\":\"sm_Background__4NWGd\",\"Background_Content\":\"sm_Background_Content__1sEHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"shared_Icon__1wdyV\"};"],"sourceRoot":""}